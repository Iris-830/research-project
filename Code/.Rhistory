# Chi-square test
chisq_test <- svychisq(as.formula(paste("~", var, "+ experienced_fistula")), design = design)
# Result
results[[var]] <- list(
glm_summary = glm_summary,
chisq_test = chisq_test
)
}
return(results)
}
variables <- c("age", "distance", "age_sex", "number_birth", "religion", "residence", "wealth", "education", "occupation", "contraception_use", "delivery_place", "delivery_professional", "postpartum_care")
# Cote d'lvoire
Cote_data <- subset(dhs_design, country == "Cote d'lvoire")
# Bivariate analysis
Cote_results <- bivariate_analysis(Cote_data, variables)
print(Cote_results)
# Cote d'lvoire
# Multivariate analysis
glm_fistula_Cote <- svyglm(experienced_fistula ~ distance + age_sex + number_birth + religion + wealth + education + occupation + contraception_use + delivery_place + delivery_professional + postpartum_care, design = Cote_data, family = quasibinomial())
summary(glm_fistula_Cote)
# GuineaBissau
GuineaBissau_data <- subset(dhs_design, country == "GuineaBissau")
# Bivariate analysis
GuineaBissau_results <- bivariate_analysis(GuineaBissau_data, variables)
print(GuineaBissau_results)
# GuineaBissau
# Multivariate analysis
glm_fistula_GuineaBissau <- svyglm(experienced_fistula ~ distance + age_sex + number_birth + religion + wealth + education + occupation + contraception_use + delivery_place + delivery_professional + postpartum_care, design = GuineaBissau_data, family = quasibinomial())
summary(glm_fistula_GuineaBissau)
# Mali
Mali_data <- subset(dhs_design, country == "Mali")
# Bivariate analysis
Mali_results <- bivariate_analysis(Mali_data, variables)
print(Mali_results)
# Mali
# Multivariate analysis
glm_fistula_Mali <- svyglm(experienced_fistula ~ distance + age_sex + number_birth + religion + wealth + education + occupation + contraception_use + delivery_place + delivery_professional + postpartum_care, design = Mali_data, family = quasibinomial())
summary(glm_fistula_Mali)
# Nigeria
Nigeria_data <- subset(dhs_design, country == "Nigeria")
# Bivariate analysis
Nigeria_results <- bivariate_analysis(Nigeria_data, variables)
print(Nigeria_results)
# Nigeria
# Multivariate analysis
glm_fistula_Nigeria <- svyglm(experienced_fistula ~ distance + age_sex + number_birth + religion + wealth + education + occupation + contraception_use + delivery_place + delivery_professional + postpartum_care, design = Nigeria_data, family = quasibinomial())
summary(glm_fistula_Nigeria)
# SierraLeone
SierraLeone_data <- subset(dhs_design, country == "SierraLeone")
# Bivariate analysis
SierraLeone_results <- bivariate_analysis(SierraLeone_data, variables)
print(SierraLeone_results)
# SierraLeone
# Multivariate analysis
glm_fistula_SierraLeone <- svyglm(experienced_fistula ~ distance + age_sex + number_birth + religion + wealth + education + occupation + contraception_use + delivery_place + delivery_professional + postpartum_care, design = SierraLeone_data, family = quasibinomial())
summary(glm_fistula_SierraLeone)
# Togo
Togo_data <- subset(dhs_design, country == "Togo")
# Bivariate analysis
Togo_results <- bivariate_analysis(Togo_data, variables)
print(Togo_results)
# Togo
# Multivariate analysis
glm_fistula_Togo <- svyglm(experienced_fistula ~ distance + age_sex + number_birth + religion + wealth + education + occupation + contraception_use + delivery_place + delivery_professional + postpartum_care, design = Togo_data, family = quasibinomial())
summary(glm_fistula_Togo)
categorical_vars <- c("experienced_fistula", "age", "distance", "age_sex", "religion", "residence", "education", "occupation", "contraception_use", "delivery_place", "delivery_professional", "postpartum_care", "number_birth")
# Categorical variables are converted to factor types
data2 <- data1 %>%
mutate(across(all_of(categorical_vars), as.factor))
# Multiple Correspondence Analysis (MCA)
library(FactoMineR)
library(factoextra)
library(plotly)
categorical_vars <- c("experienced_fistula", "age", "distance", "age_sex", "religion", "residence", "education", "occupation", "contraception_use", "delivery_place", "delivery_professional", "postpartum_care", "number_birth")
# Categorical variables are converted to factor types
data2 <- data1 %>%
mutate(across(all_of(categorical_vars), as.factor))
# --------------------------------------------------------
# clear the environment var area
rm(list = ls())
# clear all plots
graphics.off()
# clear the console area
cat("\014")
# --------------------------------------------------------
library(haven)
library(dplyr)
# read sav file
data.origin = read_sav('/Users/qimiao/Desktop/7.28/Data.sav')
# --------------------------------------------------------
# Delete missing values in target rows
data_clean <- data.origin %>% filter(!is.na(experienced_fistula))
# --------------------------------------------------------
# Cross-analysis using xtabs
cross_tab <- xtabs(~ country + experienced_fistula, data = data_clean)
print(cross_tab)
# If fewer than 50 people answered "Yes" to experienced_fistula for a particular country, the data may not be statistically representative and may not provide enough information for reliable analysis.
# Therefore, removing these countries.
# Removing Gambia, Niger, and Togo
data_clean <- data_clean %>%
filter(!(country %in% c("BurkinaFaso", "Gambia", "Niger")))
# --------------------------------------------------------
#See the missing value
library(naniar)
gg_miss_var(data_clean)
# --------------------------------------------------------
# Selecting specific variables
selected_columns <- c(
"experienced_fistula",
"country",
"V005",
"age",
"distance",
"age_sex",
"number_birth",
"religion",
"residence",
"wealth",
"education",
"occupation",
"contraception_use",
"delivery_place",
"delivery_professional",
"postpartum_care"
)
# Create a new data frame
data_selected <- data_clean[, selected_columns]
# Delete rows with missing values
data1 <- na.omit(data_selected)
# View the dataset
head(data1)
# View the structure of the dataset
str(data1)
# --------------------------------------------------------
# Processing weight
library(survey)
# DHS weights need to be divided by 1,000,000
data_design <- data1 %>% mutate(weight = V005 / 1000000)
dhs_design <- svydesign(id = ~1, weights = ~weight, data = data_design)
# --------------------------------------------------------
# Descriptive Statistical Analysis
# Convert variable types
dhs_design$variables <- dhs_design$variables %>%
mutate(across(where(is.labelled), as.numeric))
# Descriptive statistical analysis
summary_statistics <- function(dhs_design, variable) {
formula <- as.formula(paste("~", variable))
mean <- svymean(formula, dhs_design, na.rm = TRUE)
var <- svyvar(formula, dhs_design, na.rm = TRUE)
quantiles <- svyquantile(formula, dhs_design, c(0.25, 0.5, 0.75), na.rm = TRUE)
sd <- sqrt(coef(var))
data.frame(
mean = coef(mean)[1],
se = SE(mean)[1],
median = coef(quantiles)[2],
q1 = coef(quantiles)[1],
q3 = coef(quantiles)[3],
sd = sd,
min = min(dhs_design$variables[[variable]], na.rm = TRUE),
max = max(dhs_design$variables[[variable]], na.rm = TRUE)
)
}
# Calculate descriptive statistics
variables <- c("experienced_fistula", "age", "age_sex", "number_birth", "religion",
"residence", "wealth", "education", "occupation",
"contraception_use", "delivery_place", "distance",
"delivery_professional", "postpartum_care")
summary_list <- lapply(variables, function(var) {
summary_statistics(dhs_design, var)})
summary_df <- bind_rows(summary_list) %>%
select(mean, se, median, q1, q3, sd, min, max)
print(summary_df)
# --------------------------------------------------------
# write.csv(summary_df, "summary_statistics.csv")
# --------------------------------------------------------
# Compute descriptive statistics by country group
summary_by_country <- function(dhs_design, variable) {
formula <- as.formula(paste("~", variable))
country_summary <- svyby(formula, ~country, dhs_design, svymean, na.rm = TRUE)
country_quantiles <- svyby(formula, ~country, dhs_design, svyquantile, quantiles = c(0.25, 0.5, 0.75), na.rm = TRUE)
country_var <- svyby(formula, ~country, dhs_design, svyvar, na.rm = TRUE)
country_sd <- sqrt(country_var[, -1])
data.frame(
country = country_summary$country,
variable = variable,
mean = country_summary[, 2],
se = country_summary[, 3],
median = country_quantiles[, 3],
q1 = country_quantiles[, 2],
q3 = country_quantiles[, 4],
sd = country_sd[, 2], # Assuming the second column is the SD for the variable
min = tapply(dhs_design$variables[[variable]], dhs_design$variables$country, min, na.rm = TRUE),
max = tapply(dhs_design$variables[[variable]], dhs_design$variables$country, max, na.rm = TRUE)
)
}
# Descriptive statistics are calculated for each variable grouped by country
summary_by_country_list <- lapply(variables, function(var) {
summary_by_country(dhs_design, var)
})
country_tables <- summary_by_country_list %>%
bind_rows() %>%
group_by(country) %>%
group_split()
# Printing results
for (country_df in country_tables) {
country_name <- unique(country_df$country)
print(country_df)
}
# --------------------------------------------------------
# Combine all summaries into one dataframe
combined_summary_df <- bind_rows(summary_by_country_list)
# Save the combined dataframe to a CSV file
# write.csv(combined_summary_df, "all_country_statistics.csv", row.names = FALSE)
# --------------------------------------------------------
# Actual Prevalence
# West Africa
prevalence_A <- svymean(~experienced_fistula, dhs_design)
print(prevalence_A)
# --------------------------------------------------------
# Calculate the prevalence of different variables for West Africa
calculate_prevalence <- function(dhs_design, variable) {
svyby(~experienced_fistula, as.formula(paste("~", variable)), dhs_design, svymean)
}
variables <- c("country", "distance", "age_sex", "number_birth", "religion",
"residence", "wealth", "education", "occupation",
"contraception_use", "delivery_place", "age",
"delivery_professional", "postpartum_care")
prevalence_list <- lapply(variables, function(var) calculate_prevalence(dhs_design, var))
names(prevalence_list) <- variables
# Print grouped prevalence
for (var in names(prevalence_list)) {
print(prevalence_list[[var]])}
# --------------------------------------------------------
# Save to separate CSV files
#for (var in names(prevalence_list)) {
#  df <- prevalence_list[[var]]
#  filename <- paste0(var, "_prevalence_data.csv")
#  write.csv(df, filename, row.names = FALSE)
#}
# --------------------------------------------------------
# Draw a bar chart
library(ggplot2)
# Combine all prevalence data into one dataframe
prevalence_df_list <- lapply(names(prevalence_list), function(var) {
df <- prevalence_list[[var]]
df$Variable <- var
df[[var]] <- as.factor(df[[var]])  # Convert variable to factor
return(df)
})
prevalence_df <- bind_rows(prevalence_df_list)
# Draw a horizontal grouped bar chart
plot_prevalence_by_variable_horizontal <- function(data, variable) {
ggplot(data %>% filter(Variable == variable), aes_string(x = variable, y = "experienced_fistula", fill = variable)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = experienced_fistula - se, ymax = experienced_fistula + se),
width = 0.2, position = position_dodge(0.9)) +
labs(title = paste("Prevalence of Fistula by", variable),
x = variable,
y = "Prevalence of Fistula",
fill = variable) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
}
# Output a list of graphs for all variables
horizontal_plots <- lapply(variables, function(var) plot_prevalence_by_variable_horizontal(prevalence_df, var))
for (plot in horizontal_plots) {
print(plot)}
# --------------------------------------------------------
# Calculate the prevalence of different variables for each country
calculate_prevalence_by_country <- function(variable) {
svyby(~experienced_fistula, as.formula(paste("~", variable, "+ country")), dhs_design, svymean)
}
variables <- c("distance", "age_sex", "number_birth", "religion",
"residence", "wealth", "education", "occupation",
"contraception_use", "delivery_place",
"age", "delivery_professional", "postpartum_care")
prevalence_by_country_list <- lapply(variables, calculate_prevalence_by_country)
names(prevalence_by_country_list) <- variables
#  Print grouped prevalence
for (var in names(prevalence_by_country_list)) {
cat(paste("Prevalence for", var, "by country\n"))
print(prevalence_by_country_list[[var]])
cat("\n")
}
# --------------------------------------------------------
# Calculate the prevalence of different variables for each country in West Africa
# Combine all prevalence data into one dataframe
prevalence_by_country_df <- bind_rows(prevalence_by_country_list, .id = "Variable")
# Draw a horizontal grouped bar chart
plot_prevalence_by_variable_horizontal <- function(data, variable) {
ggplot(data %>% filter(Variable == variable), aes(y = country, x = experienced_fistula, fill = country)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(xmin = experienced_fistula - se, xmax = experienced_fistula + se),
width = 0.2, position = position_dodge(0.9)) +
facet_wrap(~ .data[[variable]], scales = "free_x") +
labs(title = paste("Prevalence of Fistula by Country and", variable),
y = "Country",
x = "Prevalence of Fistula",
fill = variable) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
}
# Output a list of graphs for all variables
horizontal_plots <- lapply(variables, function(var) plot_prevalence_by_variable_horizontal(prevalence_by_country_df, var))
for (i in seq_along(horizontal_plots)) {
print(horizontal_plots[[i]])
}
# Plotting a heat map
ggplot(prevalence_by_country_df, aes(x = Variable, y = country, fill = experienced_fistula)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
labs(title = "Heatmap of Fistula Prevalence by Country and Various Variables",
x = "Variable",
y = "Country",
fill = "Prevalence of Fistula") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# --------------------------------------------------------
# Feature Analysis
# West Africa
# *Crosstab
# ——Showing the prevalence of fistula under different combinations of characteristics
# 1.Personal and Family Background
background <- svyby(~ experienced_fistula, ~ age + religion + residence, dhs_design, svymean)
individual_family <- as.data.frame(background)
print(individual_family)
# 2.Economic and Social Status
economic <- svyby(~ experienced_fistula, ~ wealth + education + occupation, dhs_design, svymean)
economic_social <- as.data.frame(economic)
print(economic_social)
# 3.Medical Services and Health Conditions
health <- svyby(~ experienced_fistula, ~ postpartum_care + delivery_place + delivery_professional + distance, dhs_design, svymean)
healthcare_health <- as.data.frame(health)
print(healthcare_health)
# 4.Family Planning and Reproductive Health
reproductive <- svyby(~ experienced_fistula, ~ contraception_use + number_birth + age_sex, dhs_design, svymean)
family_reproductive <- as.data.frame(reproductive)
print(family_reproductive)
# *Visualization
# 1.Personal and Family Background
ggplot(individual_family, aes(x = age, y = experienced_fistula, fill = factor(religion))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ residence) +
labs(title = "Fistula Prevalence by Age, Religion, and Residence", x = "age", y = "prevalence") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Add the residence tag
grid.text("residence", x = 0.45, y = 0.95, gp = gpar(fontsize = 12, fontface = "bold"))
# 2.Economic and Social Status
ggplot(economic_social, aes(x = wealth, y = experienced_fistula, fill = factor(occupation))) + geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ education) +
labs(title = "Fistula Prevalence by Wealth, Education, and Occupation", x = "wealth", y = "prevalence") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
# Add the education tag
grid.text("education", x = 0.45, y = 0.95, gp = gpar(fontsize = 12, fontface = "bold"))
# 3.Medical Services and Health Conditions
ggplot(healthcare_health, aes(x = delivery_place, y = experienced_fistula, fill = factor(postpartum_care))) +
geom_bar(stat = "identity", position = "dodge") +  # 使用堆叠柱状图
facet_grid(delivery_professional ~ distance) +
labs(title = "Fistula Prevalence by Delivery Place, Postpartum Care, Delivery Professional, and Distance", x = "Delivery Place", y = "Prevalence", fill = "Postpartum Care") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Add the distance and delivery professional tag
grid.text("distance", x = 0.45, y = 0.95, gp = gpar(fontsize = 12, fontface = "bold"))
grid.text("delivery professional", x = 0.88, y = 0.5, gp = gpar(fontsize = 12, fontface = "bold"), rot = 90)
# 4.Family Planning and Reproductive Health
ggplot(family_reproductive, aes(x = age_sex, y = experienced_fistula, fill = factor(number_birth))) + geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ contraception_use) +
labs(title = "Fistula Prevalence by Total Birth, Age at First Sex, and Contraception Use", x = "age at first sex", y = "prevalence") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
# Add the contraception use tag
grid.text("contraception use", x = 0.45, y = 0.965, gp = gpar(fontsize = 12, fontface = "bold"))
# West Africa Countries
# 1.Personal and Family Background
# Generate crosstabs and visualizations
generate_crosstabs_and_plots <- function(design, country_name) {
# Filter data by country
subset_design <- subset(design, country == country_name)
background <- svyby(~experienced_fistula, ~age + religion + residence, subset_design, svymean)
individual_family <- as.data.frame(background)
# Plot
plot <- ggplot(individual_family, aes(x = age, y = experienced_fistula, fill = factor(religion))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ residence) +
labs(title = paste("Fistula Prevalence by Age, Religion, and Residence in", country_name),
x = "Age",
y = "Prevalence") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
return(plot)
}
# Contain a list include all countries
countries <- unique(data1$country)
# Crosstab and Plot
plots <- lapply(countries, function(country) {
generate_crosstabs_and_plots(dhs_design, country)
})
for (plot in plots) {
print(plot)
# Add the residence tag
grid.text("Residence", x = 0.45, y = 0.95, gp = gpar(fontsize = 12, fontface = "bold"))
}
# 2.Economic and Social Status
# Generate crosstabs and visualizations
generate_crosstabs_and_plots <- function(design, country_name) {
# Filter data by country
subset_design <- subset(design, country == country_name)
economic <- svyby(~ experienced_fistula, ~ wealth + education + occupation, subset_design, svymean)
economic_social <- as.data.frame(economic)
# Plot
plot <- ggplot(economic_social, aes(x = wealth, y = experienced_fistula, fill = factor(occupation))) + geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ education) +
labs(title = paste("Fistula Prevalence by Wealth, Education, and Occupation in", country_name), x = "wealth", y = "prevalence") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
return(plot)
}
# Contain a list include all countries
countries <- unique(data1$country)
# Crosstab and Plot
plots <- lapply(countries, function(country) {
generate_crosstabs_and_plots(dhs_design, country)
})
for (plot in plots) {
print(plot)
# Add the education tag
grid.text("education", x = 0.45, y = 0.95, gp = gpar(fontsize = 12, fontface = "bold"))
}
# 3.Medical Services and Health Conditions
# Generate crosstabs and visualizations
generate_crosstabs_and_plots <- function(design, country_name) {
# Filter data by country
subset_design <- subset(design, country == country_name)
health <- svyby(~ experienced_fistula, ~ postpartum_care + delivery_place + delivery_professional + distance, subset_design, svymean)
healthcare_health <- as.data.frame(health)
# Plot
plot <- ggplot(healthcare_health, aes(x = delivery_place, y = experienced_fistula, fill = factor(postpartum_care))) +
geom_bar(stat = "identity", position = "dodge") +  # 使用堆叠柱状图
facet_grid(delivery_professional ~ distance) +
labs(title = paste("Fistula Prevalence by Delivery Place, Postpartum Care, Delivery Professional, and Distance",country_name), x = "Delivery Place", y = "Prevalence", fill = "Postpartum Care") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
return(plot)
}
# Contain a list include all countries
countries <- unique(data1$country)
# Crosstab and Plot
plots <- lapply(countries, function(country) {
generate_crosstabs_and_plots(dhs_design, country)
})
for (plot in plots) {
print(plot)
# Add the distance, delivery professional tag
grid.text("distance", x = 0.45, y = 0.95, gp = gpar(fontsize = 12, fontface = "bold"))
grid.text("delivery professional", x = 0.88, y = 0.5, gp = gpar(fontsize = 12, fontface = "bold"), rot = 90)}
# 4.Family Planning and Reproductive Health
# Generate crosstabs and visualizations
generate_crosstabs_and_plots <- function(design, country_name) {
# Filter data by country
subset_design <- subset(design, country == country_name)
reproductive <- svyby(~ experienced_fistula, ~ contraception_use + number_birth + age_sex, subset_design, svymean)
family_reproductive <- as.data.frame(reproductive)
# Plot
plot <- ggplot(family_reproductive, aes(x = age_sex, y = experienced_fistula, fill = factor(number_birth))) + geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ contraception_use) +
labs(title = paste("Fistula Prevalence by Total Birth, Age at First Sex, and Contraception Use",country_name), x = "age at first sex", y = "prevalence") +
theme_minimal()+
theme(plot.title = element_text(hjust = 0.5))
return(plot)
}
# Contain a list include all countries
countries <- unique(data1$country)
# Crosstab and Plot
plots <- lapply(countries, function(country) {
generate_crosstabs_and_plots(dhs_design, country)
})
for (plot in plots) {
print(plot)
# Add the contraception use tag
grid.text("contraception use", x = 0.45, y = 0.965, gp = gpar(fontsize = 12, fontface = "bold"))
}
# Multiple Correspondence Analysis (MCA)
library(FactoMineR)
library(factoextra)
library(plotly)
categorical_vars <- c("experienced_fistula", "age", "distance", "age_sex", "religion", "residence", "education", "occupation", "contraception_use", "delivery_place", "delivery_professional", "postpartum_care", "number_birth")
# Categorical variables are converted to factor types
data2 <- data1 %>%
mutate(across(all_of(categorical_vars), as.factor))
str(data2[categorical_vars])
# West Africa
# MCA
mca_result <- MCA(data2[categorical_vars], graph = FALSE)
# 提取 MCA 分析的结果
mca_var_data <- mca_result$var$coord
mca_var_data <- as.data.frame(mca_var_data)
mca_var_data$var_names <- rownames(mca_var_data)  # 添加变量名称
# 创建 ggplot
mca_biplot <- ggplot(mca_var_data, aes(x = Dim.1, y = Dim.2, text = var_names)) +
geom_point(color = 'blue') +  # 画点
geom_text(aes(label = var_names), vjust = -1, size = 3) +  # 添加文本标签
theme_minimal()
# 使用 ggplotly 将其转换为 plotly 对象
mca_biplot_plotly <- ggplotly(mca_biplot, tooltip = "text")
# Variable Contribution
fviz_contrib(mca_result, choice = "var", axes = 1, top = 10)
fviz_contrib(mca_result, choice = "var", axes = 2, top = 10)
# MCA Plot
mca_biplot <- fviz_mca_biplot(mca_result, repel = TRUE, ggtheme = theme_minimal())
mca_biplot
